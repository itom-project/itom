project(itom)       
#trigger update on 2015.12.26@14:09
cmake_minimum_required(VERSION 2.8)
  
if(APPLE)
    OPTION(BUILD_TARGET64 "Build for 64 bit target if set to ON or 32 bit if set to OFF." ON) 
    SET(CMAKE_OSX_ARCHITECTURES "x86_64")
else(APPLE)
    OPTION(BUILD_TARGET64 "Build for 64 bit target if set to ON or 32 bit if set to OFF." OFF) 
endif(APPLE)
OPTION(BUILD_UNICODE "Build with unicode charset if set to ON, else multibyte charset." ON)
OPTION(BUILD_WITH_PCL "Build itom with PointCloudLibrary support (pointCloud, polygonMesh, point...)" ON)
SET (ITOM_APP_DIR ${CMAKE_CURRENT_BINARY_DIR} CACHE PATH "base path to itom")
SET (ITOM_SDK_DIR ${CMAKE_CURRENT_BINARY_DIR}/SDK CACHE PATH "base path to itom_sdk")
SET(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "Adds a postfix for debug-built libraries.")
OPTION(BUILD_UNITTEST "Build unittest for itom (including gtest)." OFF)
OPTION(BUILD_ITOMLIBS_SHARED "Build dataObject, pointCloud, itomCommonLib and itomCommonQtLib as shared library (default)" ON)
if (BUILD_TARGET64)
   set(CMAKE_SIZEOF_VOID_P 8)
else (BUILD_TARGET64)
   set(CMAKE_SIZEOF_VOID_P 4)
endif (BUILD_TARGET64) 

SET (CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR})

if (WIN32)
    # add /LTCG flag to remove MSVC linker warning in release build
    set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /LTCG")
    set(CMAKE_STATIC_LINKER_FLAGS_RELEASE "${CMAKE_STATIC_LINKER_FLAGS_RELEASE} /LTCG")
    set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /LTCG")
endif (WIN32)
      
ADD_SUBDIRECTORY(DataObject) 

IF(BUILD_WITH_PCL)
    ADD_SUBDIRECTORY(PointCloud)
    SET(ITOM_SDK_LIB_COMPONENTS_STR "dataobject pointcloud addinmanager qpropertyeditor itomCommonLib itomCommonQtLib itomCommonPlotLib itomWidgets itomShapeLib")
ELSE(BUILD_WITH_PCL)
    SET(ITOM_SDK_LIB_COMPONENTS_STR "dataobject addinmanager qpropertyeditor itomCommonLib itomCommonQtLib itomCommonPlotLib itomWidgets itomShapeLib")
ENDIF(BUILD_WITH_PCL)

ADD_SUBDIRECTORY(common)
ADD_SUBDIRECTORY(AddInManager)
ADD_SUBDIRECTORY(shape)
ADD_SUBDIRECTORY(commonQt)
ADD_SUBDIRECTORY(QPropertyEditor)
ADD_SUBDIRECTORY(plot)
ADD_SUBDIRECTORY(itomWidgets)
ADD_SUBDIRECTORY(Qitom)
ADD_SUBDIRECTORY(iconThemes)
 
IF(BUILD_UNITTEST)
    #put this as last, since gtest is globally changing many compiler flags
    ADD_SUBDIRECTORY(gtest-1.6.0)
    ADD_SUBDIRECTORY(itom_unittests)
ENDIF(BUILD_UNITTEST)  
    
#find current itom version from qitom/global.h
file(STRINGS ${CMAKE_CURRENT_SOURCE_DIR}/Qitom/global.h ITOM_versionStringFull LIMIT_COUNT 1 REGEX "^#define ITOM_VERSION_STR.*$")
string(REGEX MATCH "([0-9]+).([0-9]+).([0-9]+)" ITOM_versionString ${ITOM_versionStringFull}) #searches for Number.Number.Number[.Number] in ITOM_versionStringFull

message(STATUS "itom version is: ${ITOM_versionString}. If wrong change it in global.h and reconfigure CMake")
message(STATUS "")
message(STATUS "CMAKE_CURRENT_BINARY_DIR: ${CMAKE_CURRENT_BINARY_DIR}")
message(STATUS "")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/docs/doxygen/itom_doxygen.dox.in ${CMAKE_CURRENT_BINARY_DIR}/docs/doxygen/itom_doxygen.dox )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/docs/userDoc/create_doc.py.in ${CMAKE_CURRENT_BINARY_DIR}/docs/userDoc/create_doc.py )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/docs/userDoc/modify_doc.py.in ${CMAKE_CURRENT_BINARY_DIR}/docs/userDoc/modify_doc.py )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/docs/pythonSqlDb/PythonAPI_SqlCreator.py ${CMAKE_CURRENT_BINARY_DIR}/docs/pythonSqlDb/PythonAPI_SqlCreator.py )
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/docs/pluginDoc DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/docs)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/styles DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

################################################################################################################ 
#CONFIGURE AND PREPARE THE INNO SETUP FILES (require location of Qt, therefore find_package_qt must be called)
include("ItomBuildMacros.cmake")  
FIND_PACKAGE_QT(ON Core)
#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/win32/itom_setup_win32.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win32/itom_setup_win32.iss )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/win32/itom_setup_win32.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win32/itom_setup_win32.iss )
#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/win32/itom_setup_win32_common_files.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win32/itom_setup_win32_common_files.iss )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/common/itom_setup_code.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win32/itom_setup_win32_code.iss )

#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/win64/itom_setup_win64.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win64/itom_setup_win64.iss )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/win64/itom_setup_win64.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win64/itom_setup_win64.iss )
#configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/win64/itom_setup_win64_common_files.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win64/itom_setup_win64_common_files.iss )
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/setup/common/itom_setup_code.iss.in ${CMAKE_CURRENT_BINARY_DIR}/setup/win64/itom_setup_win64_code.iss )
################################################################################################################ 

IF(WIN32)
    SET(CHMSource "${CMAKE_CURRENT_SOURCE_DIR}/docs/itom_doc.chm")
    SET(CHMDest "${CMAKE_CURRENT_BINARY_DIR}/docs")
    
    IF(EXISTS ${CHMSource})
        IF(EXISTS "${CHMDest}/itom_doc.chm")
            IF(${CHMSource} IS_NEWER_THAN "${CHMDest}/itom_doc.chm")
                message(STATUS "copy ${CHMSource} to ${CHMDest} since it is newer")
                FILE(COPY ${CHMSource} DESTINATION ${CHMDest})
            ENDIF()
        ELSE()
            message(STATUS "copy ${CHMSource} to ${CHMDest}")
            FILE(COPY ${CHMSource} DESTINATION ${CHMDest})
        ENDIF()
    ELSE()
        message(STATUS "${CHMSource} does not exist")
    ENDIF()
ENDIF(WIN32)

IF(MSVC_VERSION EQUAL 1600)
    IF(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug64.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release64.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ELSE(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug32.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release32.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ENDIF(CMAKE_CL_64)
ELSEIF(MSVC_VERSION EQUAL 1700)
    IF(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug64_v11.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release64_v11.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ELSE(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug32_v11.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release32_v11.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ENDIF(CMAKE_CL_64)
ELSEIF(MSVC_VERSION EQUAL 1800)
    IF(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug64_v12.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release64_v12.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ELSE(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug32_v12.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release32_v12.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ENDIF(CMAKE_CL_64)
ELSEIF(MSVC_VERSION EQUAL 1900)
    IF(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug64_v14.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release64_v14.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ELSE(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug32_v14.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release32_v14.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ENDIF(CMAKE_CL_64)
ELSEIF(MSVC_VERSION EQUAL 1910)
    IF(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug64_v15.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release64_v15.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ELSE(CMAKE_CL_64)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_debug32_v15.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_debug.bat COPYONLY)
        configure_file(${CMAKE_CURRENT_SOURCE_DIR}/compile_release32_v15.bat ${CMAKE_CURRENT_BINARY_DIR}/compile_release.bat COPYONLY)
    ENDIF(CMAKE_CL_64)    
ENDIF(MSVC_VERSION EQUAL 1600)

#ADD a batch file for itom-release
CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/COPYING.txt ${CMAKE_CURRENT_BINARY_DIR}/COPYING.txt )

CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/itom_sdk.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/SDK/itom_sdk.cmake )
