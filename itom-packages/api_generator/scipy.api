scipy.ALLOW_THREADS
scipy.BUFSIZE
scipy.CLIP
scipy.ComplexWarning(??) [doc: ]
scipy.DataSource(??) [doc: ]
scipy.ERR_CALL
scipy.ERR_DEFAULT
scipy.ERR_DEFAULT2
scipy.ERR_IGNORE
scipy.ERR_LOG
scipy.ERR_PRINT
scipy.ERR_RAISE
scipy.ERR_WARN
scipy.FLOATING_POINT_SUPPORT
scipy.FPE_DIVIDEBYZERO
scipy.FPE_INVALID
scipy.FPE_OVERFLOW
scipy.FPE_UNDERFLOW
scipy.False_
scipy.Inf
scipy.Infinity
scipy.MAXDIMS
scipy.MachAr(??) [doc: ]
scipy.NAN
scipy.NINF
scipy.NZERO
scipy.NaN
scipy.PINF
scipy.PZERO
scipy.PackageLoader(??) [class]
scipy.RAISE
scipy.RankWarning(??) [doc: ]
scipy.SHIFT_DIVIDEBYZERO
scipy.SHIFT_INVALID
scipy.SHIFT_OVERFLOW
scipy.SHIFT_UNDERFLOW
scipy.ScalarType
scipy.Tester(??) [doc: ]
scipy.True_
scipy.UFUNC_BUFSIZE_DEFAULT
scipy.UFUNC_PYVALS_NAME
scipy.WRAP
scipy.absolute(x[, out])
scipy.absolute_import
scipy.add(x1, x2[, out])
scipy.add_docstring(obj, docstring)
scipy.add_newdoc(??) [doc: Adds documentation to obj which is in module place.]
scipy.add_newdoc_ufunc
scipy.add_newdocs:: [module]
scipy.alen(??) [doc: ]
scipy.all(??) [doc: ]
scipy.allclose(??) [doc: ]
scipy.alltrue(??) [doc: ]
scipy.alterdot
scipy.amax(??) [doc: ]
scipy.amin(??) [doc: ]
scipy.angle(??) [doc: ]
scipy.any(??) [doc: ]
scipy.append(??) [doc: ]
scipy.apply_along_axis(??) [doc: ]
scipy.apply_over_axes(??) [doc: ]
scipy.arange([start,] stop[, step,], dtype=None)
scipy.arccos(??) [doc: ]
scipy.arccosh(x[, out])
scipy.arcsin(??) [doc: ]
scipy.arcsinh(x[, out])
scipy.arctan(x[, out])
scipy.arctan2(x1, x2[, out])
scipy.arctanh(??) [doc: ]
scipy.argmax(??) [doc: ]
scipy.argmin(??) [doc: ]
scipy.argsort(??) [doc: ]
scipy.argwhere(??) [doc: ]
scipy.around(??) [doc: ]
scipy.array(object, dtype=None, copy=True, order=None, subok=False, ndmin=0)
scipy.array2string(??) [doc: ]
scipy.array_equal(??) [doc: ]
scipy.array_equiv(??) [doc: ]
scipy.array_repr(??) [doc: ]
scipy.array_split(??) [doc: ]
scipy.array_str(??) [doc: ]
scipy.asanyarray(??) [doc: ]
scipy.asarray(??) [doc: ]
scipy.asarray_chkfinite(??) [doc: ]
scipy.ascontiguousarray(??) [doc: ]
scipy.asfarray(??) [doc: ]
scipy.asfortranarray(??) [doc: ]
scipy.asmatrix(??) [doc: ]
scipy.asscalar(??) [doc: ]
scipy.atleast_1d(??) [doc: ]
scipy.atleast_2d(??) [doc: ]
scipy.atleast_3d(??) [doc: ]
scipy.average(??) [doc: ]
scipy.bartlett(??) [doc: ]
scipy.base_repr(??) [doc: ]
scipy.bench
scipy.binary_repr(??) [doc: ]
scipy.bincount(x, weights=None, minlength=None)
scipy.bitwise_and(x1, x2[, out])
scipy.bitwise_not
scipy.bitwise_or(x1, x2[, out])
scipy.bitwise_xor(x1, x2[, out])
scipy.blackman(??) [doc: ]
scipy.bmat(??) [doc: ]
scipy.bool8(??) [doc: Numpy's Boolean type.  Character code: ``?``.  Alias: bool8]
scipy.bool_(??) [doc: Numpy's Boolean type.  Character code: ``?``.  Alias: bool8]
scipy.broadcast(??) [doc: Produce an object that mimics broadcasting.]
scipy.broadcast_arrays(??) [doc: ]
scipy.busday_count(begindates, enddates, weekmask='1111100', holidays=[], busdaycal=None, out=None)
scipy.busday_offset(dates, offsets, roll='raise', weekmask='1111100', holidays=None, busdaycal=None, out=None)
scipy.busdaycalendar(weekmask='1111100', holidays=None)
scipy.byte(??) [doc: 8-bit integer. Character code ``b``. C char compatible.]
scipy.byte_bounds(??) [doc: ]
scipy.bytes0(??) [class]
scipy.bytes_(??) [class]
scipy.c_
scipy.can_cast(from, totype, casting = 'safe')
scipy.cast
scipy.cdouble(??) [doc: Composed of two 64 bit floats]
scipy.ceil(x[, out])
scipy.cfloat(??) [doc: Composed of two 64 bit floats]
scipy.char:: [module]
scipy.character(??) [class]
scipy.chararray(??) [doc: ]
scipy.choose(??) [doc: ]
scipy.clip(??) [doc: ]
scipy.clongdouble(??) [doc: Composed of two 64 bit floats]
scipy.clongfloat(??) [doc: Composed of two 64 bit floats]
scipy.column_stack(??) [doc: ]
scipy.common_type(??) [doc: ]
scipy.compare_chararrays
scipy.complex128(??) [doc: Composed of two 64 bit floats]
scipy.complex64(??) [doc: Composed of two 32 bit floats]
scipy.complex_(??) [doc: Composed of two 64 bit floats]
scipy.complexfloating(??) [class]
scipy.compress(??) [doc: ]
scipy.concatenate((a1, a2, ...), axis=0)
scipy.conj
scipy.conjugate(x[, out])
scipy.convolve(??) [doc: ]
scipy.copy(??) [doc: ]
scipy.copysign(x1, x2[, out])
scipy.copyto(dst, src, casting='same_kind', where=None, preservena=False)
scipy.corrcoef(??) [doc: ]
scipy.correlate(??) [doc: ]
scipy.cos(x[, out])
scipy.cosh(x[, out])
scipy.count_nonzero(a)
scipy.cov(??) [doc: ]
scipy.cross(??) [doc: ]
scipy.csingle(??) [doc: Composed of two 32 bit floats]
scipy.ctypeslib:: [module]
scipy.cumprod(??) [doc: ]
scipy.cumproduct(??) [doc: ]
scipy.cumsum(??) [doc: ]
scipy.datetime64(??) [class]
scipy.datetime_as_string
scipy.datetime_data
scipy.deg2rad(x[, out])
scipy.degrees(x[, out])
scipy.delete(??) [doc: ]
scipy.deprecate(??) [doc: ]
scipy.deprecate_with_doc(??) [function]
scipy.diag(??) [doc: ]
scipy.diag_indices(??) [doc: ]
scipy.diag_indices_from(??) [doc: ]
scipy.diagflat(??) [doc: ]
scipy.diagonal(??) [doc: ]
scipy.diff(??) [doc: ]
scipy.digitize(x, bins, right=False)
scipy.disp(??) [doc: ]
scipy.divide
scipy.division
scipy.dot(a, b, out=None)
scipy.double(??) [doc: 64-bit floating-point number. Character code 'd'. Python float compatible.]
scipy.dsplit(??) [doc: ]
scipy.dstack(??) [doc: ]
scipy.dtype(obj, align=False, copy=False)
scipy.e
scipy.ediff1d(??) [doc: ]
scipy.einsum(subscripts, *operands, out=None, dtype=None, order='K', casting='safe')
scipy.emath:: [module]
scipy.empty(shape, dtype=float, order='C')
scipy.empty_like(a, dtype=None, order='K', subok=True)
scipy.equal(x1, x2[, out])
scipy.errstate(??) [doc: ]
scipy.exp(x[, out])
scipy.exp2(x[, out])
scipy.expand_dims(??) [doc: ]
scipy.expm1(x[, out])
scipy.extract(??) [doc: ]
scipy.eye(??) [doc: ]
scipy.fabs(x[, out])
scipy.fastCopyAndTranspose
scipy.fft(??) [doc: ]
scipy.fill_diagonal(??) [doc: Fill the main diagonal of the given array of any dimensionality.]
scipy.find_common_type(??) [doc: ]
scipy.finfo(??) [doc: ]
scipy.fix(??) [doc: ]
scipy.flatiter(??) [doc: Flat iterator object to iterate over arrays.]
scipy.flatnonzero(??) [doc: ]
scipy.flexible(??) [class]
scipy.fliplr(??) [doc: ]
scipy.flipud(??) [doc: ]
scipy.float16(??) [class]
scipy.float32(??) [doc: 32-bit floating-point number. Character code 'f'. C float compatible.]
scipy.float64(??) [doc: 64-bit floating-point number. Character code 'd'. Python float compatible.]
scipy.float_(??) [doc: 64-bit floating-point number. Character code 'd'. Python float compatible.]
scipy.floating(??) [class]
scipy.floor(x[, out])
scipy.floor_divide(x1, x2[, out])
scipy.fmax(x1, x2[, out])
scipy.fmin(x1, x2[, out])
scipy.fmod(x1, x2[, out])
scipy.format_parser(??) [doc: ]
scipy.frexp(x[, out1, out2])
scipy.frombuffer(buffer, dtype=float, count=-1, offset=0)
scipy.fromfile(file, dtype=float, count=-1, sep='')
scipy.fromfunction(??) [doc: ]
scipy.fromiter(iterable, dtype, count=-1)
scipy.frompyfunc(func, nin, nout)
scipy.fromregex(??) [doc: ]
scipy.fromstring(string, dtype=float, count=-1, sep='')
scipy.fv(??) [doc: ]
scipy.generic(??) [doc: Base class for numpy scalar types.]
scipy.genfromtxt(??) [doc: ]
scipy.get_array_wrap(??) [doc: Find the wrapper for the array with the highest priority.]
scipy.get_include(??) [doc: ]
scipy.get_numarray_include(??) [doc: ]
scipy.get_printoptions(??) [doc: ]
scipy.getbufsize(??) [doc: ]
scipy.geterr(??) [doc: ]
scipy.geterrcall(??) [doc: ]
scipy.geterrobj()
scipy.gradient(??) [doc: ]
scipy.greater(x1, x2[, out])
scipy.greater_equal(x1, x2[, out])
scipy.half(??) [class]
scipy.hamming(??) [doc: ]
scipy.hanning(??) [doc: ]
scipy.histogram(??) [doc: ]
scipy.histogram2d(??) [doc: ]
scipy.histogramdd(??) [doc: ]
scipy.hsplit(??) [doc: ]
scipy.hstack(??) [doc: ]
scipy.hypot(x1, x2[, out])
scipy.i0(??) [doc: ]
scipy.identity(??) [doc: ]
scipy.ifft(??) [doc: ]
scipy.iinfo(??) [doc: ]
scipy.imag(??) [doc: ]
scipy.in1d(??) [doc: ]
scipy.index_exp
scipy.indices(??) [doc: ]
scipy.inexact(??) [class]
scipy.inf
scipy.info(??) [doc: ]
scipy.infty
scipy.inner(a, b)
scipy.insert(??) [doc: ]
scipy.int0(??) [class]
scipy.int16(??) [doc: 16-bit integer. Character code ``h``. C short compatible.]
scipy.int32(??) [doc: 32-bit integer. Character code 'i'. C int compatible.]
scipy.int64(??) [doc: 64-bit integer. Character code 'l'. Python int compatible.]
scipy.int8(??) [doc: 8-bit integer. Character code ``b``. C char compatible.]
scipy.int_(??) [doc: 32-bit integer. Character code 'i'. C int compatible.]
scipy.int_asbuffer
scipy.intc(??) [class]
scipy.integer(??) [class]
scipy.interp(??) [doc: ]
scipy.intersect1d(??) [doc: ]
scipy.intp(??) [class]
scipy.invert(x[, out])
scipy.ipmt(??) [doc: ]
scipy.irr(??) [doc: ]
scipy.is_busday(dates, weekmask='1111100', holidays=None, busdaycal=None, out=None)
scipy.isclose(??) [doc: ]
scipy.iscomplex(??) [doc: ]
scipy.iscomplexobj(??) [doc: ]
scipy.isfinite(x[, out])
scipy.isfortran(??) [doc: ]
scipy.isinf(x[, out])
scipy.isnan(x[, out])
scipy.isneginf(??) [doc: ]
scipy.isposinf(??) [doc: ]
scipy.isreal(??) [doc: ]
scipy.isrealobj(??) [doc: ]
scipy.isscalar(??) [doc: ]
scipy.issctype(??) [doc: ]
scipy.issubclass_(??) [doc: ]
scipy.issubdtype(??) [doc: ]
scipy.issubsctype(??) [doc: ]
scipy.iterable(??) [doc: ]
scipy.ix_(??) [doc: ]
scipy.kaiser(??) [doc: ]
scipy.kron(??) [doc: ]
scipy.ldexp(x1, x2[, out])
scipy.left_shift(x1, x2[, out])
scipy.less(x1, x2[, out])
scipy.less_equal(x1, x2[, out])
scipy.lexsort(keys, axis=-1)
scipy.linspace(??) [doc: ]
scipy.little_endian
scipy.load(??) [doc: ]
scipy.loads(input, *, fix_imports=True, encoding='ASCII', errors='strict') -> object
scipy.loadtxt(??) [doc: ]
scipy.log(??) [doc: ]
scipy.log10(??) [doc: ]
scipy.log1p(x[, out])
scipy.log2(??) [doc: ]
scipy.logaddexp(x1, x2[, out])
scipy.logaddexp2(x1, x2[, out])
scipy.logical_and(x1, x2[, out])
scipy.logical_not(x[, out])
scipy.logical_or(x1, x2[, out])
scipy.logical_xor(x1, x2[, out])
scipy.logn(??) [doc: ]
scipy.logspace(??) [doc: ]
scipy.long(??) [doc: 32-bit integer. Character code 'i'. C int compatible.]
scipy.longcomplex(??) [doc: Composed of two 64 bit floats]
scipy.longdouble(??) [class]
scipy.longfloat(??) [class]
scipy.longlong(??) [doc: 64-bit integer. Character code 'l'. Python int compatible.]
scipy.lookfor(??) [doc: ]
scipy.ma:: [module]
scipy.mafromtxt(??) [doc: ]
scipy.majver
scipy.mask_indices(??) [doc: ]
scipy.mat(??) [doc: ]
scipy.math:: [module]
scipy.matrix(??) [doc: ]
scipy.maximum(x1, x2[, out])
scipy.maximum_sctype(??) [doc: ]
scipy.may_share_memory(??) [doc: ]
scipy.mean(??) [doc: ]
scipy.median(??) [doc: ]
scipy.memmap(??) [doc: ]
scipy.meshgrid(??) [doc: ]
scipy.mgrid
scipy.min_scalar_type(a)
scipy.minimum(x1, x2[, out])
scipy.mintypecode(??) [doc: ]
scipy.minver
scipy.mirr(??) [doc: ]
scipy.mod
scipy.modf(x[, out1, out2])
scipy.msort(??) [doc: ]
scipy.multiply(x1, x2[, out])
scipy.nan
scipy.nan_to_num(??) [doc: ]
scipy.nanargmax(??) [doc: ]
scipy.nanargmin(??) [doc: ]
scipy.nanmax(??) [doc: ]
scipy.nanmin(??) [doc: ]
scipy.nansum(??) [doc: ]
scipy.nbytes
scipy.ndarray(??) [doc: ndarray(shape, dtype=float, buffer=None, offset=0,]
scipy.ndenumerate(??) [doc: ]
scipy.ndfromtxt(??) [doc: ]
scipy.ndim(??) [doc: ]
scipy.ndindex(??) [doc: ]
scipy.nditer(??) [doc: Efficient multi-dimensional iterator object to iterate over arrays.]
scipy.negative(x[, out])
scipy.nested_iters
scipy.newaxis
scipy.nextafter(x1, x2[, out])
scipy.nonzero(??) [doc: ]
scipy.not_equal(x1, x2[, out])
scipy.nper(??) [doc: ]
scipy.npv(??) [doc: ]
scipy.number(??) [class]
scipy.obj2sctype(??) [doc: ]
scipy.object0(??) [doc: Any Python object.  Character code: 'O'.]
scipy.object_(??) [doc: Any Python object.  Character code: 'O'.]
scipy.ogrid
scipy.oldnumeric:: [module]
scipy.ones(??) [doc: ]
scipy.ones_like(??) [doc: ]
scipy.outer(??) [doc: ]
scipy.packbits(myarray, axis=None)
scipy.pad(??) [doc: ]
scipy.percentile(??) [doc: ]
scipy.pi
scipy.piecewise(??) [doc: ]
scipy.pkgload(??) [doc: Load one or more packages into parent package top-level namespace.]
scipy.place(??) [doc: ]
scipy.pmt(??) [doc: ]
scipy.poly(??) [doc: ]
scipy.poly1d(??) [doc: ]
scipy.polyadd(??) [doc: ]
scipy.polyder(??) [doc: ]
scipy.polydiv(??) [doc: ]
scipy.polyfit(??) [doc: ]
scipy.polyint(??) [doc: ]
scipy.polymul(??) [doc: ]
scipy.polysub(??) [doc: ]
scipy.polyval(??) [doc: ]
scipy.power(??) [doc: ]
scipy.ppmt(??) [doc: ]
scipy.print_function
scipy.prod(??) [doc: ]
scipy.product(??) [doc: ]
scipy.promote_types(type1, type2)
scipy.ptp(??) [doc: ]
scipy.put(??) [doc: ]
scipy.putmask(a, mask, values)
scipy.pv(??) [doc: ]
scipy.r_
scipy.rad2deg(x[, out])
scipy.radians(x[, out])
scipy.rand
scipy.randn
scipy.random:: [module]
scipy.rank(??) [doc: ]
scipy.rate(??) [doc: ]
scipy.ravel(??) [doc: ]
scipy.ravel_multi_index(multi_index, dims, mode='raise', order='C')
scipy.real(??) [doc: ]
scipy.real_if_close(??) [doc: ]
scipy.rec:: [module]
scipy.recarray(??) [doc: ]
scipy.recfromcsv(??) [doc: ]
scipy.recfromtxt(??) [doc: ]
scipy.reciprocal(x[, out])
scipy.record(??) [doc: A data-type scalar that allows field access as attribute lookup.]
scipy.remainder(x1, x2[, out])
scipy.repeat(??) [doc: ]
scipy.require(??) [doc: ]
scipy.reshape(??) [doc: ]
scipy.resize(??) [doc: ]
scipy.restoredot
scipy.result_type(*arrays_and_dtypes)
scipy.right_shift(x1, x2[, out])
scipy.rint(x[, out])
scipy.roll(??) [doc: ]
scipy.rollaxis(??) [doc: ]
scipy.roots(??) [doc: ]
scipy.rot90(??) [doc: ]
scipy.round_(??) [doc: ]
scipy.row_stack(??) [doc: ]
scipy.s_
scipy.safe_eval(??) [doc: ]
scipy.save(??) [doc: ]
scipy.savetxt(??) [doc: ]
scipy.savez(??) [doc: ]
scipy.savez_compressed(??) [doc: ]
scipy.sctype2char(??) [doc: ]
scipy.sctypeDict
scipy.sctypeNA
scipy.sctypes
scipy.searchsorted(??) [doc: ]
scipy.select(??) [doc: ]
scipy.set_numeric_ops(op1=func1, op2=func2, ...)
scipy.set_printoptions(??) [doc: ]
scipy.set_string_function(??) [doc: ]
scipy.setbufsize(??) [doc: ]
scipy.setdiff1d(??) [doc: ]
scipy.seterr(??) [doc: ]
scipy.seterrcall(??) [doc: ]
scipy.seterrobj(errobj)
scipy.setxor1d(??) [doc: ]
scipy.shape(??) [doc: ]
scipy.short(??) [doc: 16-bit integer. Character code ``h``. C short compatible.]
scipy.show_config(??) [function]
scipy.show_numpy_config(??) [function]
scipy.sign(x[, out])
scipy.signbit(x[, out])
scipy.signedinteger(??) [class]
scipy.sin(x[, out])
scipy.sinc(??) [doc: ]
scipy.single(??) [doc: 32-bit floating-point number. Character code 'f'. C float compatible.]
scipy.singlecomplex(??) [doc: Composed of two 32 bit floats]
scipy.sinh(x[, out])
scipy.size(??) [doc: ]
scipy.sometrue(??) [doc: ]
scipy.sort(??) [doc: ]
scipy.sort_complex(??) [doc: ]
scipy.source(??) [doc: ]
scipy.spacing(x[, out])
scipy.split(??) [doc: ]
scipy.sqrt(??) [doc: ]
scipy.square(x[, out])
scipy.squeeze(??) [doc: ]
scipy.std(??) [doc: ]
scipy.str0(??) [class]
scipy.str_(??) [class]
scipy.string_(??) [class]
scipy.subtract(x1, x2[, out])
scipy.sum(??) [doc: ]
scipy.swapaxes(??) [doc: ]
scipy.take(??) [doc: ]
scipy.tan(x[, out])
scipy.tanh(x[, out])
scipy.tensordot(??) [doc: ]
scipy.test
scipy.tile(??) [doc: ]
scipy.timedelta64(??) [class]
scipy.trace(??) [doc: ]
scipy.transpose(??) [doc: ]
scipy.trapz(??) [doc: ]
scipy.tri(??) [doc: ]
scipy.tril(??) [doc: ]
scipy.tril_indices(??) [doc: ]
scipy.tril_indices_from(??) [doc: ]
scipy.trim_zeros(??) [doc: ]
scipy.triu(??) [doc: ]
scipy.triu_indices(??) [doc: ]
scipy.triu_indices_from(??) [doc: ]
scipy.true_divide(x1, x2[, out])
scipy.trunc(x[, out])
scipy.typeDict
scipy.typeNA
scipy.typecodes
scipy.typename(??) [doc: ]
scipy.ubyte(??) [class]
scipy.ufunc(??) [doc: Functions that operate element by element on whole arrays.]
scipy.uint(??) [class]
scipy.uint0(??) [class]
scipy.uint16(??) [class]
scipy.uint32(??) [class]
scipy.uint64(??) [class]
scipy.uint8(??) [class]
scipy.uintc(??) [class]
scipy.uintp(??) [class]
scipy.ulonglong(??) [class]
scipy.unicode(??) [class]
scipy.unicode_(??) [class]
scipy.union1d(??) [doc: ]
scipy.unique(??) [doc: ]
scipy.unpackbits(myarray, axis=None)
scipy.unravel_index(indices, dims, order='C')
scipy.unsignedinteger(??) [class]
scipy.unwrap(??) [doc: ]
scipy.ushort(??) [class]
scipy.vander(??) [doc: ]
scipy.var(??) [doc: ]
scipy.vdot(a, b)
scipy.vectorize(??) [doc: ]
scipy.version:: [module]
scipy.void(??) [class]
scipy.void0(??) [class]
scipy.vsplit(??) [doc: ]
scipy.vstack(??) [doc: ]
scipy.where(condition, [x, y])
scipy.who(??) [doc: ]
scipy.zeros(shape, dtype=float, order='C')
scipy.zeros_like(??) [doc: ]
