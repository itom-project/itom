# Form implementation generated from reading ui file 'c:\itom\sources\itom\Qitom\ui\widgetPropEditorCodeCheckers.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_WidgetPropEditorCodeCheckers:
    def setupUi(self, WidgetPropEditorCodeCheckers):
        WidgetPropEditorCodeCheckers.setObjectName("WidgetPropEditorCodeCheckers")
        WidgetPropEditorCodeCheckers.resize(543, 567)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(WidgetPropEditorCodeCheckers)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.scrollArea = QtWidgets.QScrollArea(parent=WidgetPropEditorCodeCheckers)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, -306, 506, 853))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.groupBox = QtWidgets.QGroupBox(parent=self.scrollAreaWidgetContents_2)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.checkIncludeItom = QtWidgets.QCheckBox(parent=self.groupBox)
        self.checkIncludeItom.setObjectName("checkIncludeItom")
        self.verticalLayout.addWidget(self.checkIncludeItom)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.labelSyntaxIntervalComment_2 = QtWidgets.QLabel(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelSyntaxIntervalComment_2.sizePolicy().hasHeightForWidth())
        self.labelSyntaxIntervalComment_2.setSizePolicy(sizePolicy)
        self.labelSyntaxIntervalComment_2.setObjectName("labelSyntaxIntervalComment_2")
        self.gridLayout_2.addWidget(self.labelSyntaxIntervalComment_2, 1, 0, 1, 1)
        self.labelSyntaxIntervalComment = QtWidgets.QLabel(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelSyntaxIntervalComment.sizePolicy().hasHeightForWidth())
        self.labelSyntaxIntervalComment.setSizePolicy(sizePolicy)
        self.labelSyntaxIntervalComment.setObjectName("labelSyntaxIntervalComment")
        self.gridLayout_2.addWidget(self.labelSyntaxIntervalComment, 0, 0, 1, 1)
        self.spinSyntaxInterval = QtWidgets.QDoubleSpinBox(parent=self.groupBox)
        self.spinSyntaxInterval.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinSyntaxInterval.sizePolicy().hasHeightForWidth())
        self.spinSyntaxInterval.setSizePolicy(sizePolicy)
        self.spinSyntaxInterval.setMinimumSize(QtCore.QSize(55, 0))
        self.spinSyntaxInterval.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.spinSyntaxInterval.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.spinSyntaxInterval.setDecimals(1)
        self.spinSyntaxInterval.setMinimum(0.1)
        self.spinSyntaxInterval.setMaximum(10.0)
        self.spinSyntaxInterval.setSingleStep(0.5)
        self.spinSyntaxInterval.setProperty("value", 0.1)
        self.spinSyntaxInterval.setObjectName("spinSyntaxInterval")
        self.gridLayout_2.addWidget(self.spinSyntaxInterval, 0, 1, 1, 2)
        self.comboShowMinLevel = QtWidgets.QComboBox(parent=self.groupBox)
        self.comboShowMinLevel.setEnabled(True)
        self.comboShowMinLevel.setObjectName("comboShowMinLevel")
        self.comboShowMinLevel.addItem("")
        self.comboShowMinLevel.addItem("")
        self.comboShowMinLevel.addItem("")
        self.gridLayout_2.addWidget(self.comboShowMinLevel, 1, 1, 1, 2)
        self.verticalLayout.addLayout(self.gridLayout_2)
        self.verticalLayout_4.addWidget(self.groupBox)
        self.groupSyntaxCheck = QtWidgets.QGroupBox(parent=self.scrollAreaWidgetContents_2)
        self.groupSyntaxCheck.setCheckable(False)
        self.groupSyntaxCheck.setObjectName("groupSyntaxCheck")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupSyntaxCheck)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.radioEnableAutoChecks = QtWidgets.QRadioButton(parent=self.groupSyntaxCheck)
        self.radioEnableAutoChecks.setChecked(True)
        self.radioEnableAutoChecks.setObjectName("radioEnableAutoChecks")
        self.verticalLayout_2.addWidget(self.radioEnableAutoChecks)
        self.radioDisableChecks = QtWidgets.QRadioButton(parent=self.groupSyntaxCheck)
        self.radioDisableChecks.setChecked(False)
        self.radioDisableChecks.setObjectName("radioDisableChecks")
        self.verticalLayout_2.addWidget(self.radioDisableChecks)
        self.radioEnableSyntaxCheck = QtWidgets.QRadioButton(parent=self.groupSyntaxCheck)
        self.radioEnableSyntaxCheck.setChecked(False)
        self.radioEnableSyntaxCheck.setObjectName("radioEnableSyntaxCheck")
        self.verticalLayout_2.addWidget(self.radioEnableSyntaxCheck)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.groupBox_3 = QtWidgets.QGroupBox(parent=self.groupSyntaxCheck)
        self.groupBox_3.setEnabled(True)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(parent=self.groupBox_3)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.lblSyntaxError = QtWidgets.QLineEdit(parent=self.groupBox_3)
        self.lblSyntaxError.setEnabled(False)
        self.lblSyntaxError.setReadOnly(True)
        self.lblSyntaxError.setObjectName("lblSyntaxError")
        self.gridLayout.addWidget(self.lblSyntaxError, 0, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(parent=self.groupBox_3)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 1, 0, 1, 1)
        self.comboSyntaxCategories = QtWidgets.QComboBox(parent=self.groupBox_3)
        self.comboSyntaxCategories.setObjectName("comboSyntaxCategories")
        self.comboSyntaxCategories.addItem("")
        self.comboSyntaxCategories.addItem("")
        self.comboSyntaxCategories.addItem("")
        self.gridLayout.addWidget(self.comboSyntaxCategories, 1, 1, 1, 1)
        self.horizontalLayout.addWidget(self.groupBox_3)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.radioEnableAllChecks = QtWidgets.QRadioButton(parent=self.groupSyntaxCheck)
        self.radioEnableAllChecks.setObjectName("radioEnableAllChecks")
        self.verticalLayout_2.addWidget(self.radioEnableAllChecks)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem1 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.groupBox_2 = QtWidgets.QGroupBox(parent=self.groupSyntaxCheck)
        self.groupBox_2.setEnabled(True)
        self.groupBox_2.setMinimumSize(QtCore.QSize(0, 0))
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_8 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_8.setOpenExternalLinks(True)
        self.label_8.setObjectName("label_8")
        self.verticalLayout_3.addWidget(self.label_8)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_7 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_7.setObjectName("label_7")
        self.gridLayout_4.addWidget(self.label_7, 0, 0, 1, 1)
        self.spinAllChecksLineLength = QtWidgets.QSpinBox(parent=self.groupBox_2)
        self.spinAllChecksLineLength.setSuffix("")
        self.spinAllChecksLineLength.setMinimum(5)
        self.spinAllChecksLineLength.setMaximum(5000)
        self.spinAllChecksLineLength.setProperty("value", 79)
        self.spinAllChecksLineLength.setObjectName("spinAllChecksLineLength")
        self.gridLayout_4.addWidget(self.spinAllChecksLineLength, 0, 1, 1, 1)
        self.label_10 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_10.setObjectName("label_10")
        self.gridLayout_4.addWidget(self.label_10, 1, 0, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.checkAllChecksSelect = QtWidgets.QCheckBox(parent=self.groupBox_2)
        self.checkAllChecksSelect.setText("")
        self.checkAllChecksSelect.setObjectName("checkAllChecksSelect")
        self.horizontalLayout_3.addWidget(self.checkAllChecksSelect)
        self.lblAllChecksSelect = QtWidgets.QLineEdit(parent=self.groupBox_2)
        self.lblAllChecksSelect.setEnabled(False)
        self.lblAllChecksSelect.setObjectName("lblAllChecksSelect")
        self.horizontalLayout_3.addWidget(self.lblAllChecksSelect)
        self.gridLayout_4.addLayout(self.horizontalLayout_3, 1, 1, 1, 1)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.checkAllChecksMaxComplexity = QtWidgets.QCheckBox(parent=self.groupBox_2)
        self.checkAllChecksMaxComplexity.setText("")
        self.checkAllChecksMaxComplexity.setObjectName("checkAllChecksMaxComplexity")
        self.horizontalLayout_5.addWidget(self.checkAllChecksMaxComplexity)
        self.spinAllChecksMaxComplexity = QtWidgets.QSpinBox(parent=self.groupBox_2)
        self.spinAllChecksMaxComplexity.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinAllChecksMaxComplexity.sizePolicy().hasHeightForWidth())
        self.spinAllChecksMaxComplexity.setSizePolicy(sizePolicy)
        self.spinAllChecksMaxComplexity.setMaximum(10000)
        self.spinAllChecksMaxComplexity.setProperty("value", 10)
        self.spinAllChecksMaxComplexity.setObjectName("spinAllChecksMaxComplexity")
        self.horizontalLayout_5.addWidget(self.spinAllChecksMaxComplexity)
        self.gridLayout_4.addLayout(self.horizontalLayout_5, 5, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_12.setOpenExternalLinks(True)
        self.label_12.setObjectName("label_12")
        self.gridLayout_4.addWidget(self.label_12, 5, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_11.setObjectName("label_11")
        self.gridLayout_4.addWidget(self.label_11, 2, 0, 1, 1)
        self.comboAllChecksDocstyle = QtWidgets.QComboBox(parent=self.groupBox_2)
        self.comboAllChecksDocstyle.setEditable(True)
        self.comboAllChecksDocstyle.setObjectName("comboAllChecksDocstyle")
        self.comboAllChecksDocstyle.addItem("")
        self.comboAllChecksDocstyle.addItem("")
        self.comboAllChecksDocstyle.addItem("")
        self.gridLayout_4.addWidget(self.comboAllChecksDocstyle, 4, 1, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.checkAllChecksIgnore = QtWidgets.QCheckBox(parent=self.groupBox_2)
        self.checkAllChecksIgnore.setText("")
        self.checkAllChecksIgnore.setObjectName("checkAllChecksIgnore")
        self.horizontalLayout_4.addWidget(self.checkAllChecksIgnore)
        self.lblAllChecksIgnore = QtWidgets.QLineEdit(parent=self.groupBox_2)
        self.lblAllChecksIgnore.setEnabled(False)
        self.lblAllChecksIgnore.setObjectName("lblAllChecksIgnore")
        self.horizontalLayout_4.addWidget(self.lblAllChecksIgnore)
        self.gridLayout_4.addLayout(self.horizontalLayout_4, 2, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_9.setOpenExternalLinks(True)
        self.label_9.setObjectName("label_9")
        self.gridLayout_4.addWidget(self.label_9, 4, 0, 1, 1)
        self.label_13 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_13.setObjectName("label_13")
        self.gridLayout_4.addWidget(self.label_13, 3, 0, 1, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.checkAllChecksIgnoreExtend = QtWidgets.QCheckBox(parent=self.groupBox_2)
        self.checkAllChecksIgnoreExtend.setText("")
        self.checkAllChecksIgnoreExtend.setChecked(True)
        self.checkAllChecksIgnoreExtend.setObjectName("checkAllChecksIgnoreExtend")
        self.horizontalLayout_6.addWidget(self.checkAllChecksIgnoreExtend)
        self.lblAllChecksIgnoreExtend = QtWidgets.QLineEdit(parent=self.groupBox_2)
        self.lblAllChecksIgnoreExtend.setEnabled(False)
        self.lblAllChecksIgnoreExtend.setObjectName("lblAllChecksIgnoreExtend")
        self.horizontalLayout_6.addWidget(self.lblAllChecksIgnoreExtend)
        self.gridLayout_4.addLayout(self.horizontalLayout_6, 3, 1, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout_4)
        self.line = QtWidgets.QFrame(parent=self.groupBox_2)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_3.addWidget(self.line)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 0, 0, 1, 1)
        self.lblAllChecksErrorNumbers = QtWidgets.QLineEdit(parent=self.groupBox_2)
        self.lblAllChecksErrorNumbers.setObjectName("lblAllChecksErrorNumbers")
        self.gridLayout_3.addWidget(self.lblAllChecksErrorNumbers, 0, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_4.setObjectName("label_4")
        self.gridLayout_3.addWidget(self.label_4, 1, 0, 1, 1)
        self.lblAllCheckWarningNumbers = QtWidgets.QLineEdit(parent=self.groupBox_2)
        self.lblAllCheckWarningNumbers.setObjectName("lblAllCheckWarningNumbers")
        self.gridLayout_3.addWidget(self.lblAllCheckWarningNumbers, 1, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_5.setObjectName("label_5")
        self.gridLayout_3.addWidget(self.label_5, 2, 0, 1, 1)
        self.verticalLayout_3.addLayout(self.gridLayout_3)
        self.line_2 = QtWidgets.QFrame(parent=self.groupBox_2)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_3.addWidget(self.line_2)
        self.label_6 = QtWidgets.QLabel(parent=self.groupBox_2)
        self.label_6.setOpenExternalLinks(True)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_3.addWidget(self.label_6)
        self.txtAllChecksMoreOptions = QtWidgets.QTextEdit(parent=self.groupBox_2)
        self.txtAllChecksMoreOptions.setMinimumSize(QtCore.QSize(0, 80))
        self.txtAllChecksMoreOptions.setLineWrapMode(QtWidgets.QTextEdit.LineWrapMode.NoWrap)
        self.txtAllChecksMoreOptions.setAcceptRichText(False)
        self.txtAllChecksMoreOptions.setObjectName("txtAllChecksMoreOptions")
        self.verticalLayout_3.addWidget(self.txtAllChecksMoreOptions)
        self.horizontalLayout_2.addWidget(self.groupBox_2)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.verticalLayout_4.addWidget(self.groupSyntaxCheck)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_2)
        self.verticalLayout_8.addWidget(self.scrollArea)

        self.retranslateUi(WidgetPropEditorCodeCheckers)
        self.comboShowMinLevel.setCurrentIndex(2)
        self.comboSyntaxCategories.setCurrentIndex(2)
        self.checkAllChecksSelect.toggled['bool'].connect(self.lblAllChecksSelect.setEnabled) # type: ignore
        self.checkAllChecksIgnore.toggled['bool'].connect(self.lblAllChecksIgnore.setEnabled) # type: ignore
        self.checkAllChecksMaxComplexity.toggled['bool'].connect(self.spinAllChecksMaxComplexity.setEnabled) # type: ignore
        self.checkAllChecksIgnoreExtend.toggled['bool'].connect(self.lblAllChecksIgnoreExtend.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(WidgetPropEditorCodeCheckers)
        WidgetPropEditorCodeCheckers.setTabOrder(self.scrollArea, self.checkIncludeItom)
        WidgetPropEditorCodeCheckers.setTabOrder(self.checkIncludeItom, self.spinSyntaxInterval)
        WidgetPropEditorCodeCheckers.setTabOrder(self.spinSyntaxInterval, self.comboShowMinLevel)
        WidgetPropEditorCodeCheckers.setTabOrder(self.comboShowMinLevel, self.radioDisableChecks)
        WidgetPropEditorCodeCheckers.setTabOrder(self.radioDisableChecks, self.radioEnableSyntaxCheck)
        WidgetPropEditorCodeCheckers.setTabOrder(self.radioEnableSyntaxCheck, self.lblSyntaxError)
        WidgetPropEditorCodeCheckers.setTabOrder(self.lblSyntaxError, self.comboSyntaxCategories)
        WidgetPropEditorCodeCheckers.setTabOrder(self.comboSyntaxCategories, self.radioEnableAllChecks)
        WidgetPropEditorCodeCheckers.setTabOrder(self.radioEnableAllChecks, self.spinAllChecksLineLength)
        WidgetPropEditorCodeCheckers.setTabOrder(self.spinAllChecksLineLength, self.checkAllChecksSelect)
        WidgetPropEditorCodeCheckers.setTabOrder(self.checkAllChecksSelect, self.lblAllChecksSelect)
        WidgetPropEditorCodeCheckers.setTabOrder(self.lblAllChecksSelect, self.checkAllChecksIgnore)
        WidgetPropEditorCodeCheckers.setTabOrder(self.checkAllChecksIgnore, self.lblAllChecksIgnore)
        WidgetPropEditorCodeCheckers.setTabOrder(self.lblAllChecksIgnore, self.checkAllChecksIgnoreExtend)
        WidgetPropEditorCodeCheckers.setTabOrder(self.checkAllChecksIgnoreExtend, self.lblAllChecksIgnoreExtend)
        WidgetPropEditorCodeCheckers.setTabOrder(self.lblAllChecksIgnoreExtend, self.comboAllChecksDocstyle)
        WidgetPropEditorCodeCheckers.setTabOrder(self.comboAllChecksDocstyle, self.checkAllChecksMaxComplexity)
        WidgetPropEditorCodeCheckers.setTabOrder(self.checkAllChecksMaxComplexity, self.spinAllChecksMaxComplexity)
        WidgetPropEditorCodeCheckers.setTabOrder(self.spinAllChecksMaxComplexity, self.lblAllChecksErrorNumbers)
        WidgetPropEditorCodeCheckers.setTabOrder(self.lblAllChecksErrorNumbers, self.lblAllCheckWarningNumbers)
        WidgetPropEditorCodeCheckers.setTabOrder(self.lblAllCheckWarningNumbers, self.txtAllChecksMoreOptions)

    def retranslateUi(self, WidgetPropEditorCodeCheckers):
        _translate = QtCore.QCoreApplication.translate
        WidgetPropEditorCodeCheckers.setWindowTitle(_translate("WidgetPropEditorCodeCheckers", "Form"))
        self.groupBox.setTitle(_translate("WidgetPropEditorCodeCheckers", "General Settings for Syntax and Style Checker"))
        self.checkIncludeItom.setText(_translate("WidgetPropEditorCodeCheckers", "Consider the itom module to be globally included in all scripts"))
        self.labelSyntaxIntervalComment_2.setText(_translate("WidgetPropEditorCodeCheckers", "Minimum category level, displayed in left column of script editor:"))
        self.labelSyntaxIntervalComment.setText(_translate("WidgetPropEditorCodeCheckers", "Update checks after last key press:"))
        self.spinSyntaxInterval.setSuffix(_translate("WidgetPropEditorCodeCheckers", " s"))
        self.comboShowMinLevel.setItemText(0, _translate("WidgetPropEditorCodeCheckers", "Information"))
        self.comboShowMinLevel.setItemText(1, _translate("WidgetPropEditorCodeCheckers", "Warning"))
        self.comboShowMinLevel.setItemText(2, _translate("WidgetPropEditorCodeCheckers", "Error"))
        self.groupSyntaxCheck.setTitle(_translate("WidgetPropEditorCodeCheckers", "Syntax and Style Checker"))
        self.radioEnableAutoChecks.setText(_translate("WidgetPropEditorCodeCheckers", "Auto Selection: If flake8 could be found, enable the Extended Check.\n"
" Else if pyflakes can be loaded, use the Basic Check.\n"
" Else: Disable any Check."))
        self.radioDisableChecks.setText(_translate("WidgetPropEditorCodeCheckers", "Disable all Syntax and Style Checks"))
        self.radioEnableSyntaxCheck.setText(_translate("WidgetPropEditorCodeCheckers", "Basic Check: Enable Basic Source Code and Syntax Check only\n"
"(requires the Python package \"pyflakes\")"))
        self.groupBox_3.setTitle(_translate("WidgetPropEditorCodeCheckers", "PyFlakes Options"))
        self.label.setText(_translate("WidgetPropEditorCodeCheckers", "Category of syntax errors:"))
        self.lblSyntaxError.setText(_translate("WidgetPropEditorCodeCheckers", "Error"))
        self.label_3.setText(_translate("WidgetPropEditorCodeCheckers", "Category of other messages:"))
        self.comboSyntaxCategories.setItemText(0, _translate("WidgetPropEditorCodeCheckers", "Information"))
        self.comboSyntaxCategories.setItemText(1, _translate("WidgetPropEditorCodeCheckers", "Warning"))
        self.comboSyntaxCategories.setItemText(2, _translate("WidgetPropEditorCodeCheckers", "Error"))
        self.radioEnableAllChecks.setText(_translate("WidgetPropEditorCodeCheckers", "Extended Check: Syntax, Style and further Checks\n"
"(requires the Python package \"flake8\" and Optional flake8 Plugin Packages)"))
        self.groupBox_2.setTitle(_translate("WidgetPropEditorCodeCheckers", "Flake8 Options"))
        self.label_8.setText(_translate("WidgetPropEditorCodeCheckers", "<html><head/><body><p><span style=\" font-weight:600;\">Hint:</span> all options can be overwritten by .flake8, tox.ini... settings files (<a href=\"https://flake8.pycqa.org/en/latest/user/configuration.html\"><span style=\" text-decoration: underline; color:#0000ff;\">more...</span></a>).</p><p><span style=\" font-weight:600;\">Common number groups are (extendable):</span><br/>F: errors from <a href=\"https://pypi.org/project/pyflakes\"><span style=\" text-decoration: underline; color:#0000ff;\">PyFlakes</span></a>; E: errors from <a href=\"https://pycodestyle.pycqa.org/\"><span style=\" text-decoration: underline; color:#0000ff;\">PyCodeStyle</span></a>;<br/>W: warnings from <a href=\"https://pycodestyle.pycqa.org/\"><span style=\" text-decoration: underline; color:#0000ff;\">PyCodeStyle</span></a>; C: messages from <a href=\"https://pypi.org/project/mccabe/\"><span style=\" text-decoration: underline; color:#0000ff;\">McCabe</span></a></p></body></html>"))
        self.label_7.setText(_translate("WidgetPropEditorCodeCheckers", "Maximum allowed line length:"))
        self.spinAllChecksLineLength.setToolTip(_translate("WidgetPropEditorCodeCheckers", "Default: 79"))
        self.label_10.setText(_translate("WidgetPropEditorCodeCheckers", "Show the following errors or warnings:"))
        self.checkAllChecksSelect.setToolTip(_translate("WidgetPropEditorCodeCheckers", "If checked, the --select option of flake8 is overwritten by this text"))
        self.lblAllChecksSelect.setToolTip(_translate("WidgetPropEditorCodeCheckers", "Comma-separated list of numbers (e.g. E, E1, E12, E123...)"))
        self.lblAllChecksSelect.setPlaceholderText(_translate("WidgetPropEditorCodeCheckers", "Example: E, F, W, C"))
        self.checkAllChecksMaxComplexity.setToolTip(_translate("WidgetPropEditorCodeCheckers", "If checked the complexity check is executed using the package McCabe"))
        self.label_12.setText(_translate("WidgetPropEditorCodeCheckers", "<html><head/><body><p>Maximum complexity (requires <a href=\"https://pypi.org/project/mccabe/\"><span style=\" text-decoration: underline; color:#0000ff;\">McCabe</span></a>):</p></body></html>"))
        self.label_11.setText(_translate("WidgetPropEditorCodeCheckers", "Ignore the following errors or warnings:"))
        self.comboAllChecksDocstyle.setItemText(0, _translate("WidgetPropEditorCodeCheckers", "pep257"))
        self.comboAllChecksDocstyle.setItemText(1, _translate("WidgetPropEditorCodeCheckers", "numpy"))
        self.comboAllChecksDocstyle.setItemText(2, _translate("WidgetPropEditorCodeCheckers", "google"))
        self.checkAllChecksIgnore.setToolTip(_translate("WidgetPropEditorCodeCheckers", "If checked, the --ignore option of flake8 is overwritten by this text"))
        self.lblAllChecksIgnore.setToolTip(_translate("WidgetPropEditorCodeCheckers", "Comma-separated list of numbers (e.g. E, E1, E12, E123...)"))
        self.lblAllChecksIgnore.setPlaceholderText(_translate("WidgetPropEditorCodeCheckers", "Example: E121,E123,E126,E226,E24,E704,W503,W504"))
        self.label_9.setText(_translate("WidgetPropEditorCodeCheckers", "<html><head/><body><p>Docstyle convention (requires <a href=\"https://pypi.org/project/flake8-docstrings/\"><span style=\" text-decoration: underline; color:#0000ff;\">flake8-docstrings</span></a>):</p></body></html>"))
        self.label_13.setText(_translate("WidgetPropEditorCodeCheckers", "Extend the (default) ignore list by:"))
        self.checkAllChecksIgnoreExtend.setToolTip(_translate("WidgetPropEditorCodeCheckers", "If checked, the --extend-ignore option of flake8 is overwritten by this text"))
        self.lblAllChecksIgnoreExtend.setToolTip(_translate("WidgetPropEditorCodeCheckers", "Comma-separated list of numbers (e.g. E, E1, E12, E123...)"))
        self.lblAllChecksIgnoreExtend.setText(_translate("WidgetPropEditorCodeCheckers", "W293"))
        self.lblAllChecksIgnoreExtend.setPlaceholderText(_translate("WidgetPropEditorCodeCheckers", "Example: E121,E123,E126,E226,E24,E704,W503,W504"))
        self.label_2.setText(_translate("WidgetPropEditorCodeCheckers", "Message codes, displayed as errors:"))
        self.lblAllChecksErrorNumbers.setToolTip(_translate("WidgetPropEditorCodeCheckers", "Comma-separated list of numbers (allowed: E, E1, E12, E123...)"))
        self.lblAllChecksErrorNumbers.setText(_translate("WidgetPropEditorCodeCheckers", "F"))
        self.lblAllChecksErrorNumbers.setPlaceholderText(_translate("WidgetPropEditorCodeCheckers", "Example: F"))
        self.label_4.setText(_translate("WidgetPropEditorCodeCheckers", "Message codes, displayed as warnings:"))
        self.lblAllCheckWarningNumbers.setText(_translate("WidgetPropEditorCodeCheckers", "E, C"))
        self.lblAllCheckWarningNumbers.setPlaceholderText(_translate("WidgetPropEditorCodeCheckers", "Example: E, C"))
        self.label_5.setText(_translate("WidgetPropEditorCodeCheckers", "all other messages belong to information."))
        self.label_6.setText(_translate("WidgetPropEditorCodeCheckers", "<html><head/><body><p>Further <a href=\"https://flake8.pycqa.org/en/latest/user/options.html\"><span style=\" text-decoration: underline; color:#0000ff;\">options</span></a>, passed to flake8 (each option is one line; format: optionname=value):</p></body></html>"))
        self.txtAllChecksMoreOptions.setPlaceholderText(_translate("WidgetPropEditorCodeCheckers", "Example:max-doc-length=79"))
