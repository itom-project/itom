# - Try to find the Visual Leak Detector includes and library
# which defines
#
# VISUALLEAKDETECTOR_FOUND - system has Visual Leak Detector
# VISUALLEAKDETECTOR_INCLUDE_DIR - where to find qextscintilla.h
# VISUALLEAKDETECTOR_LIBRARIES - the libraries to link against to use QScintilla
# VISUALLEAKDETECTOR_LIBRARY - where to find the QScintilla library (not for general use)
# VISUALLEAKDETECTOR_RUNTIME_LIBRARY - the DLL-file


SET(VISUALLEAKDETECTOR_FOUND "NO")
UNSET(VISUALLEAKDETECTOR_LIBRARY CACHE)
UNSET(VISUALLEAKDETECTOR_INCLUDE_DIR CACHE)

OPTION(VISUALLEAKDETECTOR_ENABLED "Indicate whether the visual leak detector should be switched on in debug" OFF)

FIND_PATH(VISUALLEAKDETECTOR_DIR "vld.ini" DOC "Root directory of Visual Leak Detector")

set(GLOBAL VISUALLEAKDETECTOR_LIBRARIES "")

IF(EXISTS "${VISUALLEAKDETECTOR_DIR}")
    
    FIND_PATH(VISUALLEAKDETECTOR_INCLUDE_DIR vld.h PATHS "${VISUALLEAKDETECTOR_DIR}" PATH_SUFFIXES "include")

    IF(MSVC)
        IF(CMAKE_CL_64)
            FIND_LIBRARY(VISUALLEAKDETECTOR_LIBRARY NAMES "vld" PATHS "${VISUALLEAKDETECTOR_INCLUDE_DIR}/../lib/Win64")
            #FIND_FILE(VISUALLEAKDETECTOR_RUNTIME_LIBRARY NAMES "vld_x64.dll" "dbghelp.dll" PATHS "${VISUALLEAKDETECTOR_INCLUDE_DIR}/../bin/Win64")
        ELSE(CMAKE_CL_64)
            FIND_LIBRARY(VISUALLEAKDETECTOR_LIBRARY NAMES "vld" PATHS "${VISUALLEAKDETECTOR_INCLUDE_DIR}/../lib/Win32")
            #FIND_FILE(VISUALLEAKDETECTOR_RUNTIME_LIBRARY NAMES "vld_x86.dll" "dbghelp.dll" PATHS "${VISUALLEAKDETECTOR_INCLUDE_DIR}/../bin/Win32")
        ENDIF(CMAKE_CL_64)
    ENDIF(MSVC)
ENDIF(EXISTS "${VISUALLEAKDETECTOR_DIR}")



IF (VISUALLEAKDETECTOR_LIBRARY)
	IF(VISUALLEAKDETECTOR_ENABLED)
		SET(VISUALLEAKDETECTOR_LIBRARIES debug ${VISUALLEAKDETECTOR_LIBRARY}) # optimized "")
	ENDIF()
    SET(VISUALLEAKDETECTOR_FOUND "YES")
ENDIF (VISUALLEAKDETECTOR_LIBRARY)


IF (VISUALLEAKDETECTOR_FOUND)
  IF (NOT VISUALLEAKDETECTOR_FIND_QUIETLY)
    MESSAGE(STATUS "Found VisualLeakDetector: ${VISUALLEAKDETECTOR_LIBRARIES}")
  ENDIF (NOT VISUALLEAKDETECTOR_FIND_QUIETLY)
ELSE (VISUALLEAKDETECTOR_FOUND)
  IF (VISUALLEAKDETECTOR_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find Visual Leak Detector library")
  ENDIF (VISUALLEAKDETECTOR_FIND_REQUIRED)
ENDIF (VISUALLEAKDETECTOR_FOUND)

MARK_AS_ADVANCED(VISUALLEAKDETECTOR_INCLUDE_DIR VISUALLEAKDETECTOR_LIBRARY VISUALLEAKDETECTOR_FOUND) 
