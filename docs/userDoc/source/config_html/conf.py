# iTOM documentation build configuration file, created by
# sphinx-quickstart on Sat Jul 30 14:36:28 2011.
#
# This file is execfile()d with the current directory set to its containing dir.
# <
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import sys

import __main__
import itom as itomFuncs
import sphinx
from sphinx_gallery.sorting import FileNameSortKey

try:
    import plotly.io as pio

    pio.renderers.default = "sphinx_gallery"
except ModuleNotFoundError:
    print("plotly is not installed. Plots will not be added to the sphinx_gallery")

logo = "../../../../Qitom/icons/itomicon/itomLogo3_128.png"

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath('.'))
sys.path.append(os.path.abspath("../sphinxext"))
sys.path.append(os.path.abspath("../ext"))

# -- General configuration -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be extensions
# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.todo",
    "sphinx.ext.ifconfig",
    "numpydoc",
    "breathe",
    "sphinx.ext.intersphinx",
    "itomext.designerplugindoc",
    "sphinx_gallery.gen_gallery",
    "sphinxcontrib.moderncmakedomain",
    "sphinx_favicon",
]

if [sys.version_info.major, sys.version_info.minor] >= [3, 6]:
    extensions.append("sphinx_copybutton")

if sphinx.__version__ >= "0.7":
    extensions.append("sphinx.ext.autosummary")
else:
    extensions.append("autosummary")
    extensions.append("only_directives")

if sphinx.__version__ <= "1.4.3":
    extensions.append("sphinx.ext.pngmath")
else:
    extensions.append("sphinx.ext.mathjax")
    # extensions.append('sphinx.ext.imgmath')

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix of source filenames.
source_suffix = ".rst"

# The encoding of source files.
source_encoding = "utf-8"  #'utf-8-sig'

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "itom Documentation"
# copyright = '2011-2016, Institut f체r Technische Optik (ITO), Universit채t Stuttgart. Bug report: https://github.com/itom-project/itom/issues'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
itomVersionInfo = itomFuncs.version(1)["itom"]
version = itomVersionInfo["itom_Version"]
# The full version, including alpha/beta/rc tags. / Instead of release we will use the SNV-Revision
d = itomFuncs.version(1)
if "itom_SVN_Rev" in d["itom"] and d["itom"]["itom_SVN_Rev"] != "":
    release = d["itom"]["itom_SVN_Rev"]
elif "itom_GIT_Rev_Abbrev" in d["itom"] and d["itom"]["itom_GIT_Rev_Abbrev"] != "":
    release = d["itom"]["itom_GIT_Rev_Abbrev"]
else:
    release = "unknown"


compile_datetime = itomVersionInfo["itom_compileDate"]  # Jun  5 2020, 08:13:57
comma_index = compile_datetime.index(",")
compile_year = compile_datetime[comma_index - 4 : comma_index]
copyright = (
    f"2011-{compile_year}, Institut f체r Technische Optik (ITO), "
    "Universit채t Stuttgart. Bug report: https://github.com/itom-project/itom/issues"
)


# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
# today = ''
# Else, today_fmt is used as the format for a strftime call.
today_fmt = "%B %d, %Y"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# The reST default role (used for this markup: `text`) to use for all documents.
# default_role = None
default_role = "autolink"

# If true, '()' will be appended to :func: etc. cross-reference text.
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
show_authors = False

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# Show both class-level docstring and __init__ docstring in class
# documentation
autoclass_content = "both"
autodoc_member_order = "groupwise"
autodoc_docstring_signature = True

# show table of content entries for domain objects (functions, classes, ... )
toc_object_entries = True

# -- Options for HTML output ---------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
html_theme = "pydata_sphinx_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further. For a list of options available for each theme, see the
# documentation.
html_theme_options = {
    "show_nav_level": 4,
    "navigation_depth": 4,
    "show_toc_level": 5,
    "collapse_navigation": True,
    "pygment_light_style": "vs",
    "pygment_dark_style": "monokai",
    "icon_links": [
        {
            "name": "GitHub",
            "url": "https://github.com/itom-project",
            "icon": "fa-brands fa-github",
        },
        {
            "name": "ITO",
            "url": "https://www.ito.uni-stuttgart.de/",
            "icon": "_static/ITO_Logo_neu_II.png",
            "type": "local",
        },
    ],
}

# html_context = {"default_mode": "light"}
html_show_sourcelink = True

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
html_title = "itom Documentation"

# A shorter title for the navigation bar.  Default is the same as html_title.
html_short_title = "itom"

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
html_logo = logo

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
html_favicon = logo

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_css_files = ["html.css"]
html_static_path = ["../_static"]

# sphinx gallery config
sphinx_gallery_conf = {
    "examples_dirs": [
        "../../../demo/itom",
        "../../../demo/python",
        "../../../demo/python_packages",
    ],
    "gallery_dirs": ["11_demos/itom", "11_demos/python", "11_demos/python_packages"],
    "doc_module": ("matplotlib", "numpy", "pandas", "itom"),
    "reference_url": {"matplotlib": None, "numpy": None, "pandas": None, "itom": None},
    "show_memory": False,
    "show_signature": False,
    "remove_config_comments": True,
    "download_all_examples": False,
    "min_reported_time": 0.0001,
    "filename_pattern": "demo_",
    "matplotlib_animations": True,
    "within_subsection_order": FileNameSortKey,
}

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = "%b %d, %Y"

if sphinx.__version__ < "1.6":
    # this option is deprecated from sphinx 1.6 on and can now be set by docutils.conf file (not done in our case)
    # If true, SmartyPants will be used to convert quotes and dashes to
    # typographically correct entities.
    html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
html_domain_indices = False

# If false, no index is generated.
html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = "itom_doc"

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# -----------------------------------------------------------------------------
# Autosummary
# -----------------------------------------------------------------------------
autosummary_generate = True

# -----------------------------------------------------------------------------
# Autodoc
# -----------------------------------------------------------------------------
autoclass_content = "both"
autodoc_member_order = "groupwise"
autodoc_docstring_signature = True

# -----------------------------------------------------------------------------
# Numpydoc
# -----------------------------------------------------------------------------
numpydoc_class_members_toctree = False
numpydoc_xref_param_type = True
numpydoc_show_class_members = False

# -----------------------------------------------------------------------------
# Breathe
# -----------------------------------------------------------------------------
doxygenXML_folder = __main__.__dict__["__doxygen__xml"]
breathe_projects = {"itom": doxygenXML_folder}  # os.path.abspath(".\\..\\..\\xml")}
breathe_default_project = "itom"

# -----------------------------------------------------------------------------
# Todo
# -----------------------------------------------------------------------------
todo_include_todos = True


intersphinx_mapping = {
    "python": ("https://docs.python.org/3", (None, "python3.8-inv.txt")),
    "numpy": ("https://numpy.org/doc/stable", (None, "numpy1.22-inv.txt")),
    "scipy": ("https://docs.scipy.org/doc/scipy", (None, "scipy1.14.0-inv.txt")),
    "matplotlib": ("https://matplotlib.org", (None, "matplotlib3.8.4-inv.txt")),
    "pandas": ("https://pandas.pydata.org/docs/", (None, "pandas2.2.2-inv.txt")),
}
