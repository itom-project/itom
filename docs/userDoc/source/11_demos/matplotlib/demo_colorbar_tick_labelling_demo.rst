
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "11_demos\matplotlib\demo_colorbar_tick_labelling_demo.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_11_demos_matplotlib_demo_colorbar_tick_labelling_demo.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_11_demos_matplotlib_demo_colorbar_tick_labelling_demo.py:

Colorbar tick labelling
=====================

Produce custom labelling for a colorbar.

Contributed by Scott Sinclair

.. GENERATED FROM PYTHON SOURCE LINES 8-38



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /11_demos/matplotlib/images/sphx_glr_demo_colorbar_tick_labelling_demo_001.png
         :alt: Gaussian noise with vertical colorbar
         :srcset: /11_demos/matplotlib/images/sphx_glr_demo_colorbar_tick_labelling_demo_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /11_demos/matplotlib/images/sphx_glr_demo_colorbar_tick_labelling_demo_002.png
         :alt: Gaussian noise with horizontal colorbar
         :srcset: /11_demos/matplotlib/images/sphx_glr_demo_colorbar_tick_labelling_demo_002.png
         :class: sphx-glr-multi-img





.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    from matplotlib import cm
    from numpy.random import randn

    # Make plot with vertical (default) colorbar
    fig, ax = plt.subplots()

    data = np.clip(randn(250, 250), -1, 1)

    cax = ax.imshow(data, interpolation="nearest", cmap=cm.coolwarm)
    ax.set_title("Gaussian noise with vertical colorbar")

    # Add colorbar, make sure to specify tick locations to match desired ticklabels
    cbar = fig.colorbar(cax, ticks=[-1, 0, 1])
    cbar.ax.set_yticklabels(["< -1", "0", "> 1"])  # vertically oriented colorbar

    # Make plot with horizontal colorbar
    fig, ax = plt.subplots()

    data = np.clip(randn(250, 250), -1, 1)

    cax = ax.imshow(data, interpolation="nearest", cmap=cm.afmhot)
    ax.set_title("Gaussian noise with horizontal colorbar")

    cbar = fig.colorbar(cax, ticks=[-1, 0, 1], orientation="horizontal")
    cbar.ax.set_xticklabels(["Low", "Medium", "High"])  # horizontal colorbar

    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.145 seconds)


.. _sphx_glr_download_11_demos_matplotlib_demo_colorbar_tick_labelling_demo.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_colorbar_tick_labelling_demo.py <demo_colorbar_tick_labelling_demo.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_colorbar_tick_labelling_demo.ipynb <demo_colorbar_tick_labelling_demo.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
