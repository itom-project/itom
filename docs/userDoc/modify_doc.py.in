# coding=iso-8859-15 

# -*- coding: utf-8 -*-

clc()

import os, re

def replaceInFiles(path, ending):
    dirList=os.listdir(path)
    # Files in Ordner durchlaufen
    for fname in dirList:
        if fname.endswith(ending):
            with open(path+"\\"+fname, "r") as f:
                s = f.read()
                s = s.replace("\\begin{quote}\\begin{description}", "\\begin{description}")
                s = s.replace("\\end{description}\\end{quote}", "\\end{description}")
                
                # nach Bildern suchen und nach jedem ca. 10. Bild ein \newpage einfügen
                p = re.compile(r'\\begin{figure}\[htbp\]')
                
                #chapter, sections... unterbrechen die suche
                pNeg = re.compile(r'\\chapter{|\\section{|\\subsection{|\\subsubsection{')
                
                # j gibt an nach wievielen Bildern der neue Pagebreak kommen soll
                j = 3
                pos = 0
                # count zaehlt die Vorkommen der Bilder
                c = 0
                while (pos < len(s)):
                    m = p.search(s,pos,len(s))
                    if (m == None):
                        break
                    
                    #pruefe ob zwischen pos und pos+m.end() irgendwo ein pNeg war, dann setze den zaehler zurueck
                    m2 = pNeg.search(s,pos,len(s))
                    if(not(m2 is None) and m2.end() < m.end()):
                        print("new section or chapter, figure newline counter resetted")
                        c = 1
                    else:
                        c += 1
                    
                    pos = m.end();
                    #c = c +1
                    if (c%j == 0):
                        #ersetzen
                        sStart = s[:m.start()]
                        sRep = re.sub(r'\\begin{figure}\[htbp\]',r'\\newpage\n\\begin{figure}[htbp]',s[m.start():m.end()])
                        sEnd = s[m.end():]
                        s = sStart + sRep + sEnd
                        
                # Verbatim-Einzeiler rausschmeißen ... kleiner unschoener Workaround!!!
                s = re.sub(r'\\begin{Verbatim}.*\n\\end{Verbatim}','\n',s)
                
                # leere Descriptions rausschmeißen
                s = re.sub(r'\\begin{description}\s\\end{description}','\n',s)
            with open(path+"\\"+fname,"w") as f:
                f.write(s)



